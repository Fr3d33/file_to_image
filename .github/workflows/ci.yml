name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pytest pytest-cov

            - name: Run tests
              run: |
                  python -m pytest tests/ -v --cov=. --cov-report=xml

            - name: Test encoding and decoding
              run: |
                  python Encode.py Sample/Encode.txt Sample/CI_Test.png
                  python Decode.py Sample/CI_Test.png Sample/CI_Decoded.txt

            - name: Verify round-trip integrity
              shell: bash
              run: |
                  if cmp -s Sample/Encode.txt Sample/CI_Decoded.txt; then
                    echo "✅ Round-trip test passed - files are identical"
                  else
                    echo "❌ Round-trip test failed - files differ"
                    exit 1
                  fi

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-umbrella

    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Install linting tools
              run: |
                  python -m pip install --upgrade pip
                  pip install flake8 black isort

            - name: Lint with flake8
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: Check code formatting with black
              run: |
                  black --check .

            - name: Check import sorting with isort
              run: |
                  isort --check-only .

    security:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Install security scanning tools
              run: |
                  python -m pip install --upgrade pip
                  pip install bandit safety

            - name: Run bandit security scan
              run: |
                  bandit -r . -x tests/

            - name: Check dependencies for known vulnerabilities
              run: |
                  safety check
